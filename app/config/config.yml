imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: services_app.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    translator: { fallbacks: [%locale%] }
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\User
    service:
        mailer: fos_user.mailer.twig_swift
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"
    registration:
            form:
                type: AppBundle\Form\RegistrationType

# Doctrine Configuration
doctrine:
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'
    dbal:
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        default_entity_manager: default
        entity_managers:
            default:
                naming_strategy: doctrine.orm.naming_strategy.underscore
                mappings:
                    AppBundle:
                        mapping:    true
                        type:       annotation
                        dir:        Entity
                        prefix:     AppBundle\Entity
                        alias:      App
                    ApplicationSonataMediaBundle: ~
                    SonataMediaBundle: ~
                filters:
                    softdeleteable:
                        class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                        enabled: true

stof_doctrine_extensions:
    orm:
        default:
            timestampable:  true
            blameable:      true
            softdeleteable: true

sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media:        MyVendor\MediaBundle\Entity\Media
    #    gallery:      MyVendor\MediaBundle\Entity\Gallery
    #    gallery_item: MyVendor\MediaBundle\Entity\GalleryItem
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        default:  # the default context is mandatory
            providers:
#                - sonata.media.provider.dailymotion
#                - sonata.media.provider.youtube
#                - sonata.media.provider.image
                - sonata.media.provider.file
#                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

    cdn:
        server:
            path: /uploads/media

    filesystem:
        local:
            #directory:  "%kernel.root_dir%/../public/uploads/media" #flex
            directory:  "%kernel.root_dir%/../web/uploads/media" #non-flex
            create:     true
            #probando otra vez

#    providers:
#        file:
#            service:    sonata.media.provider.file
#            resizer:    false
#            filesystem: sonata.media.filesystem.local
##            cdn:        sonata.media.cdn.server
#            generator:  sonata.media.generator.default
#            thumbnail:  sonata.media.thumbnail.format
#            allowed_extensions: ['pdf', 'txt', 'rtf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pttx', 'odt', 'odg', 'odp', 'ods', 'odc', 'odf', 'odb', 'csv', 'xml']
#            allowed_mime_types: ['application/pdf', 'application/x-pdf', 'application/rtf', 'text/html', 'text/rtf', 'text/plain']
#

sonata_core:
    form:
        mapping:
            enabled: false

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

sensio_framework_extra:
   router:
        annotations: false
